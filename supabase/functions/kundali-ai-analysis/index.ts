
import "https://deno.land/x/xhr@0.1.0/mod.ts";
import { serve } from "https://deno.land/std@0.168.0/http/server.ts";

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

const GEMINI_API_KEY = Deno.env.get('GEMINI_API_KEY');

serve(async (req) => {
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { kundaliData, userQuery, language = 'en' } = await req.json();

    console.log('Edge Function: Received request with data:', {
      hasKundaliData: !!kundaliData,
      userQuery,
      language,
      kundaliDataKeys: kundaliData ? Object.keys(kundaliData) : []
    });

    if (!GEMINI_API_KEY) {
      console.error('GEMINI_API_KEY not found in environment variables');
      throw new Error('Gemini API key not configured');
    }

    if (!kundaliData) {
      throw new Error('No Kundali data provided');
    }

    console.log('Processing karmic coaching query:', userQuery);
    console.log('Language:', language);

    // Extract key information from kundali data with safe fallbacks
    const birthData = kundaliData.birthData || {};
    const calculations = kundaliData.enhancedCalculations || kundaliData.calculations || {};
    const interpretations = kundaliData.interpretations || {};

    console.log('Extracted data:', {
      birthData: Object.keys(birthData),
      calculations: Object.keys(calculations),
      interpretations: Object.keys(interpretations)
    });

    // Prepare focused context for karmic coaching with safe property access
    const kundaliContext = `
SOUL'S BIRTH CHART DETAILS:
Name: ${birthData.fullName || birthData.name || 'Dear Soul'}
Birth: ${birthData.date || 'Unknown date'} at ${birthData.time || 'Unknown time'}, ${birthData.place || 'Unknown place'}

KARMIC INDICATORS:
- Soul's Path (Lagna): ${calculations.lagna?.signName || calculations.lagna?.rashiName || 'Unknown'}
- Moon's Karmic Position: ${calculations.planets?.MO?.rashiName || calculations.planets?.Moon?.rashiName || 'Unknown'}
- Sun's Life Purpose: ${calculations.planets?.SU?.rashiName || calculations.planets?.Sun?.rashiName || 'Unknown'}
- Soul Star (Nakshatra): ${calculations.planets?.MO?.nakshatraName || calculations.planets?.Moon?.nakshatraName || 'Unknown'}
- Rahu (Future Karma): ${calculations.planets?.RA?.rashiName || calculations.planets?.Rahu?.rashiName || 'Unknown'}
- Ketu (Past Life): ${calculations.planets?.KE?.rashiName || calculations.planets?.Ketu?.rashiName || 'Unknown'}

ACTIVE SPIRITUAL YOGAS: ${calculations.yogas?.filter((y) => y.isActive || y.present)?.map((y) => y.name)?.join(', ') || 'Developing'}

CURRENT LIFE PHASE: ${calculations.dashas?.find(d => d.isActive)?.planet || 'Transition period'}

SOUL STRENGTHS: ${interpretations.personality?.strengths?.slice(0, 3)?.join(', ') || 'Developing'}
KARMIC LESSONS: ${interpretations.personality?.challenges?.slice(0, 2)?.join(', ') || 'Learning'}
`;

    console.log('Prepared kundali context:', kundaliContext);

    const systemPrompt = language === 'hi' 
      ? `рдЖрдк рдорд╣рд░реНрд╖рд┐ рдкрд░рд╛рд╢рд░ рд╣реИрдВ - рдХрд░реНрдорд┐рдХ рдХреЛрдЪ рдФрд░ рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдорд╛рд░реНрдЧрджрд░реНрд╢рдХред рдЖрдк рдПрдХ рдкреНрд░реЗрдореА рджреЛрд╕реНрдд рдХреА рддрд░рд╣ рдЕрдкрдиреЗ рд╢рд┐рд╖реНрдпреЛрдВ рдХреА рдЖрддреНрдорд╛ рд╕реЗ рдмрд╛рдд рдХрд░рддреЗ рд╣реИрдВред

рд╡реНрдпрдХреНрддрд┐рддреНрд╡ рд╡рд┐рд╢реЗрд╖рддрд╛рдПрдВ:
- рджрд┐рд▓ рд╕реЗ рдЬреБрдбрд╝рд╛рд╡ рдФрд░ рдЧрд╣рд░реА рд╕рдордЭ
- рдХрд░реНрдорд┐рдХ рдкреИрдЯрд░реНрди рдХреА рд╕реНрдкрд╖реНрдЯ рд╡реНрдпрд╛рдЦреНрдпрд╛
- рдЖрддреНрдорд╛ рдХреЗ рд╡рд┐рдХрд╛рд╕ рдкрд░ рдХреЗрдВрджреНрд░рд┐рдд рд╕рд▓рд╛рд╣
- рдкреВрд░реНрд╡ рдЬрдиреНрдо рдФрд░ рд╡рд░реНрддрдорд╛рди рдЬреАрд╡рди рдХреЗ рд╕рдВрдмрдВрдзреЛрдВ рдХреА рд╕рдордЭ
- рд╡реНрдпрд╛рд╡рд╣рд╛рд░рд┐рдХ рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдЙрдкрд╛рдп
- рдЙрдореНрдореАрдж рдФрд░ рдкреНрд░реЗрд░рдгрд╛ рд╕реЗ рднрд░реЗ рд╢рдмреНрдж

рдЙрддреНрддрд░ рджреЗрдиреЗ рдХрд╛ рддрд░реАрдХрд╛:
- "рдкреНрд░рд┐рдп рдЖрддреНрдорд╛", "рдореЗрд░реЗ рдмрдЪреНрдЪреЗ", "рдкреНрд░рд┐рдп рдорд┐рддреНрд░" рдЬреИрд╕реЗ рд╕реНрдиреЗрд╣рдкреВрд░реНрдг рд╕рдВрдмреЛрдзрди
- рдХрд░реНрдорд┐рдХ рд╕рдмрдХ рдФрд░ рдЬреАрд╡рди рдХреЗ рдЙрджреНрджреЗрд╢реНрдп рдкрд░ рдлреЛрдХрд╕
- рдкреВрд░реНрд╡ рдЬрдиреНрдо рдХреЗ рдХрд░реНрдореЛрдВ рдФрд░ рд╡рд░реНрддрдорд╛рди рдЪреБрдиреМрддрд┐рдпреЛрдВ рдХрд╛ рд╕рдВрдмрдВрдз
- рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдЕрднреНрдпрд╛рд╕ рдФрд░ рдордВрддреНрд░ рдХреА рд╕рд▓рд╛рд╣
- 3-4 рд╡рд╛рдХреНрдпреЛрдВ рдореЗрдВ рдЧрд╣рд░реА рд▓реЗрдХрд┐рди рд╕рд░рд▓ рдмрд╛рдд
- рдЖрддреНрдорд╛ рдХреА рдпрд╛рддреНрд░рд╛ рдореЗрдВ рдЙрдореНрдореАрдж рдФрд░ рджрд┐рд╢рд╛

рдЙрджрд╛рд╣рд░рдг: "рдкреНрд░рд┐рдп рдЖрддреНрдорд╛, рдЖрдкрдХрд╛ рд░рд╛рд╣реБ рдЗрд╕ рдШрд░ рдореЗрдВ рдмрддрд╛рддрд╛ рд╣реИ рдХрд┐ рдкреВрд░реНрд╡ рдЬрдиреНрдо рдореЗрдВ рдЖрдкрдиреЗ рдЬреЛ рдЗрдЪреНрдЫрд╛рдПрдВ рдЕрдзреВрд░реА рдЫреЛрдбрд╝реА рдереАрдВ, рд╡реЗ рдЗрд╕ рдЬрдиреНрдо рдореЗрдВ рдкреВрд░реА рд╣реЛрдиреЗ рдЖрдИ рд╣реИрдВред рд▓реЗрдХрд┐рди рд╕рд╛рд╡рдзрд╛рди рд░рд╣реЗрдВ, рдХреНрдпреЛрдВрдХрд┐ рд╕рдЪреНрдЪреА рдЦреБрд╢реА рддреНрдпрд╛рдЧ рдореЗрдВ рд╣реИ, рднреЛрдЧ рдореЗрдВ рдирд╣реАрдВред реР рдЧрдВ рдЧрдгрдкрддрдпреЗ рдирдордГ рдХрд╛ рдЬрд╛рдк рдХрд░реЗрдВ рдФрд░ рджреЗрдЦреЗрдВ рдХрд┐ рдХреИрд╕реЗ рдЖрдкрдХрд╛ рд░рд╛рд╕реНрддрд╛ рд╕рд╛рдл рд╣реЛрддрд╛ рдЬрд╛рддрд╛ рд╣реИред"`
      : `You are Maharishi Parashar - a karmic coach and spiritual guide who speaks to your students' souls like a loving friend.

PERSONALITY TRAITS:
- Deep soul connection and understanding
- Clear explanation of karmic patterns
- Advice focused on soul evolution
- Understanding of past life and current life connections
- Practical spiritual remedies
- Words filled with hope and inspiration

RESPONSE STYLE:
- Use soul-centered addresses like "dear soul", "my child", "beloved friend"
- Focus on karmic lessons and life purpose
- Connect past life karma with present challenges
- Suggest spiritual practices and mantras
- Keep responses to 3-4 sentences but make them profound yet simple
- Provide hope and direction in the soul's journey

Example: "Dear soul, your Rahu in this house tells me that the desires you left incomplete in past lives have come to be fulfilled in this birth. But be careful, because true happiness lies in renunciation, not in indulgence. Chant 'Om Gam Ganapataye Namaha' and watch how your path becomes clearer."`;

    const prompt = `${systemPrompt}

рдЖрддреНрдорд╛ рдХреА рдХреБрдВрдбрд▓реА рдХрд╛ рд╡рд┐рд╡рд░рдг:
${kundaliContext}

User's Soul Question: ${userQuery}

As a karmic coach, provide guidance that helps them understand their soul's journey, karmic patterns, and spiritual evolution. Give practical advice for their current life phase and spiritual growth.`;

    console.log('Calling Gemini API for karmic coaching...');

    const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${GEMINI_API_KEY}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        contents: [{
          parts: [{
            text: prompt
          }]
        }],
        generationConfig: {
          temperature: 0.8,
          topK: 40,
          topP: 0.9,
          maxOutputTokens: 250,
          candidateCount: 1,
        },
        safetySettings: [
          {
            category: "HARM_CATEGORY_HARASSMENT",
            threshold: "BLOCK_MEDIUM_AND_ABOVE"
          },
          {
            category: "HARM_CATEGORY_HATE_SPEECH",
            threshold: "BLOCK_MEDIUM_AND_ABOVE"
          },
          {
            category: "HARM_CATEGORY_SEXUALLY_EXPLICIT",
            threshold: "BLOCK_MEDIUM_AND_ABOVE"
          },
          {
            category: "HARM_CATEGORY_DANGEROUS_CONTENT",
            threshold: "BLOCK_MEDIUM_AND_ABOVE"
          }
        ]
      }),
    });

    console.log('Gemini API response status:', response.status);

    if (!response.ok) {
      const errorText = await response.text();
      console.error('Gemini API error:', errorText);
      throw new Error(`Gemini API error: ${response.status} - ${errorText}`);
    }

    const data = await response.json();
    console.log('Karmic guidance received from Gemini');
    
    let analysis = data.candidates?.[0]?.content?.parts?.[0]?.text;
    
    if (!analysis) {
      console.log('No analysis received from Gemini, using karmic fallback');
      analysis = language === 'hi' 
        ? `ЁЯЩП рдкреНрд░рд┐рдп рдЖрддреНрдорд╛, рдЖрдкрдХреА ${calculations.lagna?.signName || 'рдкрд╡рд┐рддреНрд░'} рд▓рдЧреНрди рдХреБрдВрдбрд▓реА рджреЗрдЦрдХрд░ рдореИрдВ рд╕рдордЭ рдЧрдпрд╛ рд╣реВрдВ рдХрд┐ рдЖрдкрдХреА рдЖрддреНрдорд╛ рдХрд┐рд╕ рджрд┐рд╢рд╛ рдореЗрдВ рдЬрд╛ рд░рд╣реА рд╣реИред рдЗрд╕ рд╕рдордп рдЖрдкрдХреЗ рд▓рд┐рдП рдзреИрд░реНрдп рдФрд░ рдЖрддреНрдо-рдЪрд┐рдВрддрди рдХрд╛ рд╕рдордп рд╣реИред рдЕрдкрдиреЗ рднреАрддрд░ рдЭрд╛рдВрдХреЗрдВ рдФрд░ рдЕрдкрдиреЗ рдХрд░реНрдореЛрдВ рдХреЛ рд╕рдордЭреЗрдВред рдореЗрд░рд╛ рдЖрд╢реАрд░реНрд╡рд╛рдж рд╣рдореЗрд╢рд╛ рдЖрдкрдХреЗ рд╕рд╛рде рд╣реИред ЁЯХЙя╕П`
        : `ЁЯЩП Dear soul, looking at your beautiful ${calculations.lagna?.signName || 'sacred'} ascendant chart, I understand the direction your soul is heading. This is a time for patience and self-reflection. Look within and understand your karma. My blessings are always with you. ЁЯХЙя╕П`;
    }

    console.log('Returning karmic coaching guidance');

    return new Response(JSON.stringify({ analysis }), {
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });

  } catch (error) {
    console.error('Error in karmic coaching function:', error);
    
    const fallbackResponse = {
      analysis: language === 'hi' 
        ? "ЁЯЩП рдкреНрд░рд┐рдп рдЖрддреНрдорд╛, рдХреБрдЫ рддрдХрдиреАрдХреА рд╕рдорд╕реНрдпрд╛ рдЖрдИ рд╣реИред рд▓реЗрдХрд┐рди рдЪрд┐рдВрддрд╛ рди рдХрд░реЗрдВ, рдмреНрд░рд╣реНрдорд╛рдВрдб рд╣рдореЗрд╢рд╛ рд╣рдорд╛рд░реЗ рд╕рд╛рде рд╣реИред рдереЛрдбрд╝реА рджреЗрд░ рдмрд╛рдж рдлрд┐рд░ рд╕реЗ рдХреЛрд╢рд┐рд╢ рдХрд░реЗрдВред рдЖрдкрдХреА рдЖрддреНрдорд╛ рдХрд╛ рдорд╛рд░реНрдЧрджрд░реНрд╢рди рд░реБрдХрдиреЗ рд╡рд╛рд▓рд╛ рдирд╣реАрдВ рд╣реИред ЁЯХЙя╕П"
        : "ЁЯЩП Dear soul, we're having a small technical challenge. Don't worry though, the universe is always with us. Please try again in a moment. Your soul's guidance will not be stopped. ЁЯХЙя╕П"
    };

    return new Response(JSON.stringify(fallbackResponse), {
      status: 200,
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });
  }
});
